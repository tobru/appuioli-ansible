---
# tasks file for infra pi

- name: Determine if Pi-hole is installed
  stat:
    path: /usr/bin/pihole-FTL
  register: pihole_there
  ignore_errors: True

# TODO: prefill /etc/pihole/setupVars.conf and run with --unattended
# See https://discourse.pi-hole.net/t/what-is-setupvars-conf-and-how-do-i-use-it/3533
- name: Run Pi-hole Install Script
  script: files/pihole.sh
  when: pihole_there.stat.exists == False

- name: Install packages
  apt:
    name: "{{ item }}"
    state: installed
  with_items:
    - ansible
    - autossh
    - conky-std
    - git
    - iptables-persistent
    - jq
    - matchbox-keyboard
    - nmap
    - tcpdump
    - tmate
    - vim
    - vlan

# This is a very static configuration and meant for this specific use-case
# Could be done more dynamic with https://docs.ansible.com/ansible/2.4/interfaces_file_module.html
# introduced in Ansible 2.4
- name: Add and configure VLAN interfaces
  copy:
    src: files/interfaces
    dest: /etc/network/interfaces

- name: Configure NAT / Masquerading WAN
  iptables:
    table: nat
    chain: POSTROUTING
    out_interface: vlan20
    jump: MASQUERADE

- name: Configure NAT / Masquerading WLAN
  iptables:
    table: nat
    chain: POSTROUTING
    out_interface: wlan0
    jump: MASQUERADE

- name: Configure packet forwarding between vlan 20 and 30
  iptables:
    table: filter
    chain: FORWARD
    in_interface: vlan20
    out_interface: vlan30
    ctstate: RELATED,ESTABLISHED
    jump: ACCEPT

- name: Allow from vlan 30 to vlan 20
  iptables:
    table: filter
    chain: FORWARD
    in_interface: vlan30
    out_interface: vlan20
    jump: ACCEPT

- name: Allow from vlan 30 to wlan0
  iptables:
    table: filter
    chain: FORWARD
    in_interface: vlan30
    out_interface: wlan0
    jump: ACCEPT

- name: Persist IPTables
  command: netfilter-persistent save

- name: Enable routing
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    state: present
    sysctl_set: yes

- name: Configure AutoSSH for phone home
  template:
    src: templates/autossh_phonehome.service
    dest: /etc/systemd/system/autossh_phonehome.service
  register: autossh_systemd_unit
  when:
   - phone_home_ssh_user is defined
   - phone_home_ssh_host is defined

- name: Generate SSH Key
  shell: ssh-keygen -b 2048 -t rsa -f /etc/ssh/phonehome_key -q -N "" -C "APPUiOli Management Node"
  args:
    creates: /etc/ssh/phonehome_key

- name: Store SSH public key
  command: /bin/cat /etc/ssh/phonehome_key.pub
  register: ssh_pub_key

- name: Show SSH public key
  debug:
    var: ssh_pub_key.stdout_lines

- name: Restart AutoSSH Service
  systemd:
    name: autossh_phonehome.service
    daemon_reload: yes
    state: restarted
    enabled: yes
  when: autossh_systemd_unit|changed

- name: Install SSH client config
  copy:
    src: files/ssh_config
    dest: /home/pi/.ssh/config
